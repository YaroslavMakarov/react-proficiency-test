{"version":3,"sources":["helpers/api.ts","store/charactersReucer.ts","store/rootStore.ts","helpers/urlNumber.ts","components/Character/Character.tsx","components/Characters/Characters.tsx","components/Episodes/Episodes.tsx","components/HomePage/HomePage.tsx","components/Locations/Locations.tsx","components/App/App.tsx","reportWebVitals.js","index.tsx"],"names":["getData","endPoint","a","fetch","responseDataAPI","json","dataFromServer","START_LOADING_CHARACTERS","SUCCESS_LOADING_CHARACTERS","ERROR_LOADING_CHARACTERS","loadingPersons","dispatch","type","isLoading","then","data","characters","results","next","info","catch","isError","initialCharactersState","charactersReducer","state","action","allReducers","combineReducers","charactersInfo","store","createStore","applyMiddleware","thunk","churactersSelector","urlNumber","url","split","length","Character","character","image","name","location","origin","episode","species","status","gender","locationNumber","originNumber","episodesNumbers","i","push","className","src","alt","to","map","number","Characters","personThunkDispatch","useDispatch","useSelector","useEffect","id","Episodes","HomePage","exact","Locations","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.849e2305.chunk.js","sourcesContent":["const API_URL = 'https://rickandmortyapi.com/api/';\r\n\r\nexport const getData = async (endPoint: string) => {\r\n    const responseDataAPI = await fetch(`${API_URL}${endPoint}`);\r\n    const dataFromServer = await responseDataAPI.json();\r\n\r\n    return dataFromServer;\r\n};","import { Action, Dispatch } from 'redux';\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { getData } from '../helpers/api';\r\nimport { State } from \"./rootStore\";\r\n\r\nconst START_LOADING_CHARACTERS = 'START_LOADING_CHARACTERS';\r\nconst SUCCESS_LOADING_CHARACTERS = 'SUCCESS_LOADING_CHARACTERS';\r\nconst ERROR_LOADING_CHARACTERS = 'ERROR_LOADING_CHARACTERS';\r\n\r\n//ActionTypes and action cretors\r\ntype StartLoadingCharacters = Action<typeof START_LOADING_CHARACTERS> & {\r\n    isLoading: boolean;\r\n};\r\ntype SuccessLoadingCharacters = Action<typeof SUCCESS_LOADING_CHARACTERS> & {\r\n    characters: Array<Character>;\r\n    next: string | null;\r\n};\r\ntype ErrorLoadingCharacters = Action<typeof ERROR_LOADING_CHARACTERS> & {\r\n    isError: boolean;\r\n};\r\nexport const startLoadingCharacters = (isLoading: boolean): StartLoadingCharacters => ({\r\n    type: START_LOADING_CHARACTERS,\r\n    isLoading,\r\n});\r\nexport const successLoadingCharacters = (characters: Array<Character>, next: string | null): SuccessLoadingCharacters => ({\r\n    type: SUCCESS_LOADING_CHARACTERS,\r\n    characters,\r\n    next\r\n});\r\nexport const errorLoading = (isError: boolean): ErrorLoadingCharacters => ({\r\n    type: ERROR_LOADING_CHARACTERS,\r\n    isError,\r\n});\r\n\r\n//thunks\r\nexport type CharactersThunk = ThunkAction<void, State, unknown, Action<string>>;\r\n\r\nexport const loadingPersons = (): CharactersThunk => {\r\n    return (dispatch: Dispatch<AllCharactersActions>) => {\r\n        dispatch(startLoadingCharacters(true));\r\n\r\n        return getData('character/?page=1')\r\n            .then(data => dispatch(successLoadingCharacters(data.results, data.info.next)))\r\n            .catch(() => dispatch(errorLoading(true)));\r\n    };\r\n};\r\n\r\nexport type InitialCharactersState = {\r\n    isLoading: boolean;\r\n    isError: boolean;\r\n    characters: Array<Character>;\r\n    next: string | null;\r\n};\r\n\r\nconst initialCharactersState: InitialCharactersState = {\r\n    isLoading: false,\r\n    isError: true,\r\n    characters: [],\r\n    next: null,\r\n};\r\n\r\nexport type AllCharactersActions = StartLoadingCharacters | SuccessLoadingCharacters | ErrorLoadingCharacters;\r\n\r\nconst charactersReducer = (state = initialCharactersState, action: AllCharactersActions) => {\r\n    switch(action.type) {\r\n        case START_LOADING_CHARACTERS: return {\r\n            ...state,\r\n            isLoading: action.isLoading\r\n        };\r\n        case SUCCESS_LOADING_CHARACTERS: return {\r\n            ...state,\r\n            characters: [...action.characters],\r\n            isLoading: false,\r\n            next: action.next\r\n        };\r\n        case ERROR_LOADING_CHARACTERS: return {\r\n            ...state,\r\n            isLoading: false,\r\n            isError: action.isError,\r\n        };\r\n\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport default charactersReducer;","import { combineReducers, createStore, Store, applyMiddleware } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport charactersReducer, { InitialCharactersState } from './charactersReucer';\r\n\r\nconst allReducers = combineReducers({\r\n    charactersInfo: charactersReducer,\r\n});\r\n\r\nexport type State = {\r\n    charactersInfo: InitialCharactersState,\r\n};\r\n\r\nconst store: Store<State> = createStore(allReducers, applyMiddleware(thunk));\r\n\r\n//characters selector\r\nexport const churactersSelector = (state: State) => state.charactersInfo.characters\r\n\r\nexport default store;\r\n","export const urlNumber = (url: string): string => {\r\n    return url.split('/')[url.split('/').length - 1];\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { urlNumber } from '../../helpers/urlNumber';\r\n\r\nimport './Character.scss';\r\n\r\ntype Props = {\r\n    character: Character; \r\n};\r\n\r\nconst Character: React.FC<Props> = ({ character }) => {\r\n    const { \r\n        image, name, location, origin, episode,\r\n        species, status, gender\r\n    } = character;\r\n    const locationNumber = urlNumber(location.url);\r\n    const originNumber = urlNumber(origin.url);\r\n    const episodesNumbers: Array<string> = [];\r\n\r\n    for (let i = 0; i < episode.length; i++) {\r\n        episodesNumbers.push(urlNumber(episode[i]))\r\n    };\r\n\r\n\r\n    return (\r\n    <div className=\"character__wrapper\">\r\n        <div className=\"character__bio\">\r\n            <img\r\n                className=\"character__photo\"\r\n                src={image}\r\n                alt=\"photo\"\r\n            />\r\n            <div className=\"character__info-wrapper\">\r\n                <div className=\"character__info\">\r\n                    Name: {name}\r\n                </div>\r\n                <div className=\"character__info\">\r\n                    Gender: {gender}\r\n                </div>\r\n                <div className=\"character__info\">\r\n                    Species: {species}\r\n                </div>\r\n                <div className=\"character__info\">\r\n                    Status: {status}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <Link\r\n            className=\"character__link character__location\"\r\n            to={`/locations/${locationNumber}`}\r\n        >\r\n            Location: {location.name}\r\n        </Link>\r\n        <Link\r\n            className=\"character__link character__location\"\r\n            to={`/locations/${originNumber}`}\r\n        >\r\n            Origin: {origin.name}\r\n        </Link>\r\n        <div className=\"characters__episodes\">\r\n            Episodes:\r\n            {episodesNumbers.map(number => (\r\n                <Link\r\n                    className=\"character__link\"\r\n                    to={`/episodes/${number}`}\r\n                >\r\n                    Episode: {number}\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Character;","import { useEffect, Dispatch } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport './Characters.scss';\r\nimport { CharactersThunk, loadingPersons } from \"../../store/charactersReucer\";\r\nimport { churactersSelector } from \"../../store/rootStore\";\r\nimport Character from \"../Character/Character\";\r\n\r\nconst Characters = () => {\r\n    const personThunkDispatch = useDispatch<Dispatch<CharactersThunk>>();\r\n\r\n    const characters = useSelector(churactersSelector);\r\n\r\n    useEffect(() => {\r\n        personThunkDispatch(loadingPersons());\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"characters__wrapper\">\r\n            {characters.map(character => (\r\n                <Character\r\n                    key={character.id}\r\n                    character={character}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Characters;","const Episodes = () => {\r\n    return (\r\n        <div>\r\n            Episodes\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Episodes;","import './HomePage.scss';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div className=\"homepage__container\">\r\n            <NavLink\r\n              to=\"/characters\"\r\n              exact\r\n              className=\"homepage__link\"\r\n            >\r\n                Characters\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/episodes\"\r\n              exact\r\n              className=\"homepage__link\"\r\n            >\r\n                Episodes\r\n            </NavLink>\r\n            <NavLink\r\n              to=\"/locations\"\r\n              exact\r\n              className=\"homepage__link\"\r\n            >\r\n                Locations\r\n            </NavLink>\r\n        </div> \r\n    );\r\n};\r\n\r\nexport default HomePage;","const Locations = () => {\r\n    return (\r\n        <div>\r\n            Locations\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Locations;","import { Route, Switch } from 'react-router-dom';\n\nimport Characters from '../Characters/Characters';\nimport Episodes from '../Episodes/Episodes';\nimport HomePage from '../HomePage/HomePage';\nimport Locations from '../Locations/Locations';\n\nimport './App.scss';\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route \n          path='/'\n          exact\n          component={HomePage}\n        />\n        <Route \n          path='/characters'\n          exact\n          component={Characters}\n        />\n        <Route \n          path='/episodes'\n          exact\n          component={Episodes}\n        />\n        <Route \n          path='/locations'\n          exact\n          component={Locations}\n        />\n      </Switch> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './index.scss';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store/rootStore';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}